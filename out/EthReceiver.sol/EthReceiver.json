{"abi":[{"type":"receive","stateMutability":"payable"},{"type":"error","name":"EthDepositRejected","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EthDepositRejected\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Abstract contract for rejecting direct ETH transfers from EOAs. Implements a custom error and logic to reject ETH deposits from non-contract addresses.\",\"errors\":{\"EthDepositRejected()\":[{\"details\":\"Error thrown when an ETH deposit from an EOA is attempted.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"EthReceiver\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/solidity-utils/contracts/mixins/EthReceiver.sol\":\"EthReceiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@1inch/solidity-utils/=lib/solidity-utils/\",\":@chainlink/contracts/=lib/chainlink-brownie-contracts/contracts/\",\":@gnosis.pm/safe-contracts/=lib/safe-contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":safe-contracts/=lib/safe-contracts/\",\":solidity-utils/=lib/solidity-utils/\"],\"viaIR\":true},\"sources\":{\"lib/solidity-utils/contracts/mixins/EthReceiver.sol\":{\"keccak256\":\"0x02ff3d1cf523bd8c8dc3caf93844ec09223ff9609f5896ef46fa41d5b00c2e03\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2bb6f01875b48bde18abf64e8092037c46b65b1d1173a673f3d63ee82c630cad\",\"dweb:/ipfs/QmNS5jZFtLe19SejZzDkGwoCzd92NjoreaadU5oVqz7Xma\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"EthDepositRejected"},{"inputs":[],"stateMutability":"payable","type":"receive"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@1inch/solidity-utils/=lib/solidity-utils/","@chainlink/contracts/=lib/chainlink-brownie-contracts/contracts/","@gnosis.pm/safe-contracts/=lib/safe-contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","safe-contracts/=lib/safe-contracts/","solidity-utils/=lib/solidity-utils/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/solidity-utils/contracts/mixins/EthReceiver.sol":"EthReceiver"},"evmVersion":"shanghai","libraries":{},"viaIR":true},"sources":{"lib/solidity-utils/contracts/mixins/EthReceiver.sol":{"keccak256":"0x02ff3d1cf523bd8c8dc3caf93844ec09223ff9609f5896ef46fa41d5b00c2e03","urls":["bzz-raw://2bb6f01875b48bde18abf64e8092037c46b65b1d1173a673f3d63ee82c630cad","dweb:/ipfs/QmNS5jZFtLe19SejZzDkGwoCzd92NjoreaadU5oVqz7Xma"],"license":"MIT"}},"version":1},"id":69}