{"abi":[{"type":"error","name":"RemainingInvalidatedOrder","inputs":[]}],"bytecode":{"object":"0x6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea2646970667358221220bd33c2f966121d74004b9ff4106ce3fb4365ab71765fb517a1b3dde7d12f414a64736f6c63430008170033","sourceMap":"469:2631:97:-:0;;;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x5f80fdfea2646970667358221220bd33c2f966121d74004b9ff4106ce3fb4365ab71765fb517a1b3dde7d12f414a64736f6c63430008170033","sourceMap":"469:2631:97:-:0;;","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"RemainingInvalidatedOrder\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"The remaining amount is used as a nonce to invalidate the order. When order is created, the remaining invalidator is 0. When order is filled, the remaining invalidator is the inverse of the remaining amount.\",\"errors\":{\"RemainingInvalidatedOrder()\":[{\"details\":\"The error is thrown when an attempt is made to invalidate an already invalidated entity.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"RemainingInvalidatorLib\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"The library provides a mechanism to invalidate order based on the remaining amount of the order.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/libraries/RemainingInvalidatorLib.sol\":\"RemainingInvalidatorLib\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@1inch/solidity-utils/=lib/solidity-utils/\",\":@chainlink/contracts/=lib/chainlink-brownie-contracts/contracts/\",\":@gnosis.pm/safe-contracts/=lib/safe-contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":safe-contracts/=lib/safe-contracts/\",\":solidity-utils/=lib/solidity-utils/\"],\"viaIR\":true},\"sources\":{\"src/libraries/RemainingInvalidatorLib.sol\":{\"keccak256\":\"0x5f2b3d07c5cc4b83b088862765c950c10add12dc8b93acb6c1e4670c6f5c23c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f19c141abadc45d74a55a5a9241a41ec17a7afc1e77ac9309cd704c0f40d592d\",\"dweb:/ipfs/QmZyyQziTwN7XR6zjwgWoZbcJTK99nHmwdsS82xPsuFTKV\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"RemainingInvalidatedOrder"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@1inch/solidity-utils/=lib/solidity-utils/","@chainlink/contracts/=lib/chainlink-brownie-contracts/contracts/","@gnosis.pm/safe-contracts/=lib/safe-contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","safe-contracts/=lib/safe-contracts/","solidity-utils/=lib/solidity-utils/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/libraries/RemainingInvalidatorLib.sol":"RemainingInvalidatorLib"},"evmVersion":"shanghai","libraries":{},"viaIR":true},"sources":{"src/libraries/RemainingInvalidatorLib.sol":{"keccak256":"0x5f2b3d07c5cc4b83b088862765c950c10add12dc8b93acb6c1e4670c6f5c23c2","urls":["bzz-raw://f19c141abadc45d74a55a5a9241a41ec17a7afc1e77ac9309cd704c0f40d592d","dweb:/ipfs/QmZyyQziTwN7XR6zjwgWoZbcJTK99nHmwdsS82xPsuFTKV"],"license":"MIT"}},"version":1},"id":97}