{"abi":[{"type":"fallback","stateMutability":"nonpayable"},{"type":"function","name":"setFallbackHandler","inputs":[{"name":"handler","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"ChangedFallbackHandler","inputs":[{"name":"handler","type":"address","indexed":true,"internalType":"address"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"setFallbackHandler(address)":"f08a0323"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"handler\",\"type\":\"address\"}],\"name\":\"ChangedFallbackHandler\",\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"handler\",\"type\":\"address\"}],\"name\":\"setFallbackHandler\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Richard Meissner - @rmeissner\",\"kind\":\"dev\",\"methods\":{\"setFallbackHandler(address)\":{\"details\":\"1. Only fallback calls without value and with data will be forwarded.      2. Changing the fallback handler can only be done via a Safe transaction.      3. Cannot be set to the Safe itself.      4. IMPORTANT! SECURITY RISK! The fallback handler can be set to any address and all the calls will be forwarded to it,         bypassing all the Safe's access control mechanisms. When setting the fallback handler, make sure to check the address         is a trusted contract and if it supports state changes, it implements the necessary checks.\",\"params\":{\"handler\":\"contract to handle fallback calls.\"}}},\"title\":\"Fallback Manager - A contract managing fallback calls made to this contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setFallbackHandler(address)\":{\"notice\":\"Set Fallback Handler to `handler` for the Safe.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/safe-contracts/contracts/base/FallbackManager.sol\":\"FallbackManager\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@1inch/solidity-utils/=lib/solidity-utils/\",\":@chainlink/contracts/=lib/chainlink-brownie-contracts/contracts/\",\":@gnosis.pm/safe-contracts/=lib/safe-contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":safe-contracts/=lib/safe-contracts/\",\":solidity-utils/=lib/solidity-utils/\"],\"viaIR\":true},\"sources\":{\"lib/safe-contracts/contracts/base/FallbackManager.sol\":{\"keccak256\":\"0xcb789670ae150a1b13189c2131f5404026d1023eb5161bc7afb855ce761195d6\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://0e7d6a541334ed4ab50574ed42a30b96c01c42776be91a86a018d1fa7de42772\",\"dweb:/ipfs/QmbUBQK2gnELZPGtcUk16Jw3oS3gLqjbg4pqpCSgcVe4vt\"]},\"lib/safe-contracts/contracts/common/SelfAuthorized.sol\":{\"keccak256\":\"0x6b31f149b2f8e76487a03c8aeeabfc9b32407d4d917e39331c28dafe7cee77d5\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://a4736edb9b16d02736f4bf8c02c1cd80381ec33de48ffc59669529f184e82f66\",\"dweb:/ipfs/QmbcYa5r5vaVDfGyMmQc42uajtDwLYgrhYV3Eb3AFWdPjf\"]},\"lib/safe-contracts/contracts/interfaces/IFallbackManager.sol\":{\"keccak256\":\"0xa8de18145d58930b4cb774e47cac4e91fb318c633b0cc0a219c4aeebe10dabaf\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://920348747b3bfe596cd8c0e214110b47936d5e5fea5e79533846b31c25ea1eac\",\"dweb:/ipfs/QmUWHrbEQ7ES7JZ5CSBx86Bw5MvfdDEE4jtiiJzRXBD5dM\"]},\"lib/safe-contracts/contracts/libraries/ErrorMessage.sol\":{\"keccak256\":\"0x94898c1134378628d5f9420a16cbab3dc542386d0cbb2cabfceba3eba502c2be\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://add50c6f6c32ffd87c6dd1f2fa98ff6b09cb16af0d216bd7ebe83ea017522622\",\"dweb:/ipfs/QmXHCZE2xdzSq5r7jKdvS4ZAaRKsDWbgzSGfnwZZmDEhPm\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"handler","type":"address","indexed":true}],"type":"event","name":"ChangedFallbackHandler","anonymous":false},{"inputs":[],"stateMutability":"nonpayable","type":"fallback"},{"inputs":[{"internalType":"address","name":"handler","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setFallbackHandler"}],"devdoc":{"kind":"dev","methods":{"setFallbackHandler(address)":{"details":"1. Only fallback calls without value and with data will be forwarded.      2. Changing the fallback handler can only be done via a Safe transaction.      3. Cannot be set to the Safe itself.      4. IMPORTANT! SECURITY RISK! The fallback handler can be set to any address and all the calls will be forwarded to it,         bypassing all the Safe's access control mechanisms. When setting the fallback handler, make sure to check the address         is a trusted contract and if it supports state changes, it implements the necessary checks.","params":{"handler":"contract to handle fallback calls."}}},"version":1},"userdoc":{"kind":"user","methods":{"setFallbackHandler(address)":{"notice":"Set Fallback Handler to `handler` for the Safe."}},"version":1}},"settings":{"remappings":["@1inch/solidity-utils/=lib/solidity-utils/","@chainlink/contracts/=lib/chainlink-brownie-contracts/contracts/","@gnosis.pm/safe-contracts/=lib/safe-contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","safe-contracts/=lib/safe-contracts/","solidity-utils/=lib/solidity-utils/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/safe-contracts/contracts/base/FallbackManager.sol":"FallbackManager"},"evmVersion":"shanghai","libraries":{},"viaIR":true},"sources":{"lib/safe-contracts/contracts/base/FallbackManager.sol":{"keccak256":"0xcb789670ae150a1b13189c2131f5404026d1023eb5161bc7afb855ce761195d6","urls":["bzz-raw://0e7d6a541334ed4ab50574ed42a30b96c01c42776be91a86a018d1fa7de42772","dweb:/ipfs/QmbUBQK2gnELZPGtcUk16Jw3oS3gLqjbg4pqpCSgcVe4vt"],"license":"LGPL-3.0-only"},"lib/safe-contracts/contracts/common/SelfAuthorized.sol":{"keccak256":"0x6b31f149b2f8e76487a03c8aeeabfc9b32407d4d917e39331c28dafe7cee77d5","urls":["bzz-raw://a4736edb9b16d02736f4bf8c02c1cd80381ec33de48ffc59669529f184e82f66","dweb:/ipfs/QmbcYa5r5vaVDfGyMmQc42uajtDwLYgrhYV3Eb3AFWdPjf"],"license":"LGPL-3.0-only"},"lib/safe-contracts/contracts/interfaces/IFallbackManager.sol":{"keccak256":"0xa8de18145d58930b4cb774e47cac4e91fb318c633b0cc0a219c4aeebe10dabaf","urls":["bzz-raw://920348747b3bfe596cd8c0e214110b47936d5e5fea5e79533846b31c25ea1eac","dweb:/ipfs/QmUWHrbEQ7ES7JZ5CSBx86Bw5MvfdDEE4jtiiJzRXBD5dM"],"license":"LGPL-3.0-only"},"lib/safe-contracts/contracts/libraries/ErrorMessage.sol":{"keccak256":"0x94898c1134378628d5f9420a16cbab3dc542386d0cbb2cabfceba3eba502c2be","urls":["bzz-raw://add50c6f6c32ffd87c6dd1f2fa98ff6b09cb16af0d216bd7ebe83ea017522622","dweb:/ipfs/QmXHCZE2xdzSq5r7jKdvS4ZAaRKsDWbgzSGfnwZZmDEhPm"],"license":"LGPL-3.0-only"}},"version":1},"id":39}